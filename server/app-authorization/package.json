{
  "name": "app-authorization",
  "version": "1.0.0",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "ts-node ./node_modules/typeorm/cli.js",
    "migration:empty": "cross-replace npm run typeorm migration:create ./src/db/migrations/${npm_config_name}",
    "migration:generate": "cross-replace npm run typeorm migration:generate -- ./src/db/migrations/${npm_config_name} -d ./src/db/config/mysql/orm.config.ts",
    "migration:revert": "npm run typeorm migration:revert -- -d ./src/db/config/mysql/orm.config.ts",
    "migration:execute": "npm run typeorm migration:run -- -d ./src/db/config/mysql/orm.config.ts",
    "docker:build": "docker build -t research_indicators_server_management_authorization .",
    "docker:tag": "docker tag research_indicators_server_management_authorization research_indicators_server_management_authorization:$npm_package_version",
    "docker:test": "docker run --env-file ./.env research_indicators_server_management_authorization npm run test",
    "docker:lint": "docker run --env-file ./.env research_indicators_server_management_authorization npm run lint",
    "docker:run": "docker run --env-file ./.env -dti --name research_indicators_management_authorization_app -p 3001:3001 research_indicators_server_management_authorization",
    "docker:stop": "docker stop research_indicators_management_authorization_app && docker rm research_indicators_server_management_authorization",
    "docker:logs": "docker logs research_indicators_management_authorization_app",
    "docker:exec": "docker exec -it research_indicators_management_authorization_app /bin/bash",
    "compose:up:dev": "docker-compose up dev -d",
    "compose:up:prod": "docker-compose up prod -d"
  },
  "dependencies": {
    "@aws-sdk/client-cognito-identity-provider": "^3.624.0",
    "@aws-sdk/client-dynamodb": "^3.529.0",
    "@aws-sdk/credential-provider-cognito-identity": "^3.624.0",
    "@nestjs/axios": "^3.0.2",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/microservices": "^10.3.10",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.3.10",
    "@nestjs/swagger": "^7.3.1",
    "@nestjs/typeorm": "^10.0.2",
    "@nestjs/websockets": "^10.3.10",
    "@typescript-eslint/eslint-plugin": "^7.6.0",
    "@typescript-eslint/parser": "^7.6.0",
    "activedirectory": "^0.7.2",
    "cross-replace": "^0.2.0",
    "eslint": "^8.57.0",
    "fast-xml-parser": "^4.4.1",
    "lint": "^1.1.2",
    "mysql2": "^3.9.6",
    "passport-custom": "^1.1.1",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "socket.io": "^4.7.5",
    "typeorm": "^0.3.20",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "coverageReporters": [
      "text",
      "cobertura",
      "lcov"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 60,
        "functions": 60,
        "lines": 60,
        "statements": 60
      }
    },
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
